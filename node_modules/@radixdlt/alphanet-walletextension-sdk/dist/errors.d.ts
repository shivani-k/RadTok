export declare const errorType: {
    readonly missingAddress: "missingAddress";
    readonly rejectedByUser: "rejectedByUser";
    readonly missingExtension: "missingExtension";
    readonly unavailable: "unavailable";
    readonly internal: "internal";
    readonly submitTransaction: "submitTransaction";
};
declare type ErrorTypes = typeof errorType;
declare type ErrorType = keyof ErrorTypes;
declare type GenericError<T extends ErrorType> = {
    requestId: string;
    error: T;
    message: string;
};
declare type MissingAddressError = GenericError<'missingAddress'>;
declare type RejectedByUserError = GenericError<'rejectedByUser'>;
declare type MissingExtensionError = GenericError<'missingExtension'>;
declare type UnavailableError = GenericError<'unavailable'>;
declare type InternalError = GenericError<'internal'>;
declare type SubmitTransactionError = GenericError<'submitTransaction'>;
export declare type SdkError = MissingAddressError | RejectedByUserError | MissingExtensionError | UnavailableError | InternalError | SubmitTransactionError;
export declare const createSdkError: (error: ErrorType, requestId: string, message?: string) => SdkError;
export {};
