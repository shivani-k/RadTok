/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { EcdsaSecp256k1Signature } from './EcdsaSecp256k1Signature';
import type { PublicKeyType } from './PublicKeyType';
/**
 * Because ECDSA has recoverable signatures, this only includes a signature
 * @export
 * @interface EcdsaSecp256k1SignatureWithPublicKey
 */
export interface EcdsaSecp256k1SignatureWithPublicKey {
    /**
     *
     * @type {PublicKeyType}
     * @memberof EcdsaSecp256k1SignatureWithPublicKey
     */
    key_type: PublicKeyType;
    /**
     *
     * @type {EcdsaSecp256k1Signature}
     * @memberof EcdsaSecp256k1SignatureWithPublicKey
     */
    recoverable_signature: EcdsaSecp256k1Signature;
}
/**
 * Check if a given object implements the EcdsaSecp256k1SignatureWithPublicKey interface.
 */
export declare function instanceOfEcdsaSecp256k1SignatureWithPublicKey(value: object): boolean;
export declare function EcdsaSecp256k1SignatureWithPublicKeyFromJSON(json: any): EcdsaSecp256k1SignatureWithPublicKey;
export declare function EcdsaSecp256k1SignatureWithPublicKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): EcdsaSecp256k1SignatureWithPublicKey;
export declare function EcdsaSecp256k1SignatureWithPublicKeyToJSON(value?: EcdsaSecp256k1SignatureWithPublicKey | null): any;
