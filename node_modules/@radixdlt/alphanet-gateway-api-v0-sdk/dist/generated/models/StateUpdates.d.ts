/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { DownSubstate } from './DownSubstate';
import type { GlobalEntityId } from './GlobalEntityId';
import type { SubstateId } from './SubstateId';
import type { UpSubstate } from './UpSubstate';
/**
 * Transaction state updates (only present if status is Succeeded or Failed)
 * @export
 * @interface StateUpdates
 */
export interface StateUpdates {
    /**
     *
     * @type {Array<SubstateId>}
     * @memberof StateUpdates
     */
    down_virtual_substates: Array<SubstateId>;
    /**
     *
     * @type {Array<UpSubstate>}
     * @memberof StateUpdates
     */
    up_substates: Array<UpSubstate>;
    /**
     *
     * @type {Array<DownSubstate>}
     * @memberof StateUpdates
     */
    down_substates: Array<DownSubstate>;
    /**
     *
     * @type {Array<GlobalEntityId>}
     * @memberof StateUpdates
     */
    new_global_entities: Array<GlobalEntityId>;
}
/**
 * Check if a given object implements the StateUpdates interface.
 */
export declare function instanceOfStateUpdates(value: object): boolean;
export declare function StateUpdatesFromJSON(json: any): StateUpdates;
export declare function StateUpdatesFromJSONTyped(json: any, ignoreDiscriminator: boolean): StateUpdates;
export declare function StateUpdatesToJSON(value?: StateUpdates | null): any;
