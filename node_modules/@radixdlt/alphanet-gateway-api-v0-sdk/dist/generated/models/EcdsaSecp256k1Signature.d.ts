/**
 * Babylon Alphanet v0 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { PublicKeyType } from './PublicKeyType';
/**
 *
 * @export
 * @interface EcdsaSecp256k1Signature
 */
export interface EcdsaSecp256k1Signature {
    /**
     *
     * @type {PublicKeyType}
     * @memberof EcdsaSecp256k1Signature
     */
    key_type: PublicKeyType;
    /**
     * A hex-encoded recoverable ECDSA Secp256k1 signature (65 bytes). The first byte is the recovery id, the remaining 64 bytes are the compact signature, ie CONCAT(R, s) where R and s are each 32-bytes in padded big-endian format.
     * @type {string}
     * @memberof EcdsaSecp256k1Signature
     */
    signature_hex: string;
}
/**
 * Check if a given object implements the EcdsaSecp256k1Signature interface.
 */
export declare function instanceOfEcdsaSecp256k1Signature(value: object): boolean;
export declare function EcdsaSecp256k1SignatureFromJSON(json: any): EcdsaSecp256k1Signature;
export declare function EcdsaSecp256k1SignatureFromJSONTyped(json: any, ignoreDiscriminator: boolean): EcdsaSecp256k1Signature;
export declare function EcdsaSecp256k1SignatureToJSON(value?: EcdsaSecp256k1Signature | null): any;
